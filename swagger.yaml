swagger: '2.0'
info:
  description: This is a generic comments and ratings service.
  version: 1.0.0
  title: United Effects Comments and Ratings Service
  contact:
    email: borzou@theboeffect.com
host: localhost:3000
basePath: /api
tags:
  - name: logs
    description: Logging endpoints
  - name: comments
    description: Manage comments and ratings
    externalDocs:
      description: Learn more about United Effects
      url: 'http://unitedeffects.com'
schemes:
  - http
  - https
paths:
  /logs:
    post:
      tags:
        - logs
      summary: Write a new log to the console and the db
      description: 'This is unlikely to be used with frequency.'
      operationId: writeLog
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Log data to be written
          required: true
          schema:
            $ref: '#/definitions/Log'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseLog'
        '405':
          description: Invalid input
        '500':
          description: Unknown error
      security:
        - UEAuth: []
    get:
      tags:
        - logs
      summary: Retrieve all logs in the system
      description: ''
      operationId: getLogs
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Logs'
      security:
        - UEAuth: []
  '/logs/{code}':
    get:
      tags:
        - logs
      summary: Find all logs with one type of code.
      description: Codes should be "error", "notify", or "success"
      operationId: getLogByCode
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code of log types to return
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Logs'
        '400':
          description: Invalid code supplied
      security:
        - UEAuth: []
  '/logs/{code}/{timestamp}':
    get:
      tags:
        - logs
      summary: Find a log with code and timestamp specified
      description: Codes should be "error", "notify", or "success".
      operationId: getLog
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: code of log type to return
          required: true
          type: string
        - name: timestamp
          in: path
          description: timestamp of log type to return
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseLog'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
  /comments/{domain}:
    get:
      tags:
        - comments
      summary: Get all comments (parents by default) for a target
      description: Get all comments (parents by default) for a target
      operationId: getComments
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: locator
          in: query
          description: target locator to reference. either this or target ID are required but not both.
          required: false
          type: string
        - name: targetId
          in: query
          description: target ID to reference. either this or locator are required but not both.
          required: false
          type: string
        - name: parentId
          in: query
          description: returns children of this parent comment
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseComments'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
  /comment/{domain}/{id}:
    get:
      tags:
        - comments
      summary: Get a specific comment
      description: Get a specific comment
      operationId: getComment
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the comment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseComment'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
    delete:
      tags:
        - comments
      summary: Delete a specific comment
      description: Delete a specific comment
      operationId: deleteComment
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the comment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseComment'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
    put:
      tags:
        - comments
      summary: Replace a specific comment
      description: Replace a specific comment
      operationId: putComment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the comment
          required: true
          type: string
        - in: body
          name: body
          description: Comment overwrite
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseComment'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
  /comment/{domain}/:
    post:
      tags:
        - comments
      summary: Create a comment
      description: Create a comment
      operationId: putComment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the comment
          required: true
          type: string
        - in: body
          name: body
          description: Comment overwrite
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseComment'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
  /target/{domain}:
    get:
      tags:
        - comments
      summary: Get a target aggregate data. This may take a moment to respond.
      description: Get a target aggregate data. This may take a moment to respond.
      operationId: getOverallTarget
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: locator
          in: query
          description: locator for the target to map
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseTarget'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
    post:
      tags:
        - comments
      summary: Create a new target independantly of comments.
      description: Create a new target independantly of comments.
      operationId: createTarget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the target
          required: true
          type: string
        - in: body
          name: body
          description: Comment overwrite
          required: true
          schema:
            $ref: '#/definitions/Target'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseTarget'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
  /target/{domain}/{id}:
    delete:
      tags:
        - comments
      summary: Delete a specific target. This will orphan comments.
      description: Delete a specific target. This will orphan comments.
      operationId: deleteTarget
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the target
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseTarget'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
    patch:
      tags:
        - comments
      summary: Update a specific target. Limited.
      description: Update a specific target. Limited.
      operationId: patchTarget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: domain
          in: path
          description: UE Auth domain slug (or equivalent)
          required: true
          type: string
        - name: id
          in: path
          description: ID of the target
          required: true
          type: string
        - in: body
          name: body
          description: Comment overwrite
          required: true
          schema:
            $ref: '#/definitions/Target'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponseTarget'
        '400':
          description: Invalid code supplied
        '404':
          description: Log not found
      security:
        - UEAuth: []
securityDefinitions:
  UEAuth:
    type: apiKey
    name: Authorization
    in: header
    description: For both UEAuth and other Bearer based tokens, type in "Bearer " followed by your Token.
definitions:
  Log:
    type: object
    required:
      - logCode
      - logTimestamp
    properties:
      logCode:
        type: string
        description: This is your hashKey. This should only be ERROR, NOTIFY, or SUCCESS
      logTimestamp:
        type: string
        format: date-time
        description: This is your rangeKey. This is a timestamp.
      message:
        type: string
        description: This should be any brief summary data in string format.
      details:
        type: object
        description: You can directly pipe any error message objects to here.
  ApiResponseLog:
    properties:
      type:
        type: string
        default: 'Log'
      data:
        $ref: '#/definitions/Log'
  ApiResponseComment:
    properties:
      type:
        type: string
        enum: ['Comment']
      data:
        $ref: '#/definitions/Comment'
  ApiResponseTarget:
    properties:
      type:
        type: string
        enum: ['Comment']
      data:
        $ref: '#/definitions/Target'
  ApiResponseComments:
    properties:
      type:
        type: string
        enum: ['Comments']
      data:
        type: array
        items:
          $ref: '#/definitions/Comment'
  Logs:
    properties:
      type:
        type: string
        default: 'Log'
      data:
        type: array
        items:
          $ref: '#/definitions/Log'
  Comment:
    properties:
      target_id:
        type: string
      created:
        type: string
        format: date-time
      creator:
        type: string
      modified:
        type: string
        format: date-time
      parent_id:
        type: string
      modified_by:
        type: string
      comment:
        type: string
      domain:
        type: string
      dimensions:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: integer
              format: int32
      overall_rating:
        type: integer
        format: int32
      status:
        type: string
        description: see config for options
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      data:
        type: string
  Target:
    type: object
    properties:
      target_locator:
        type: string
      type:
        type: string
        description: see config for options
      created:
        type: string
        format: date-time
      domain:
        type: string
      dimensions:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            dimension_values:
              type: array
              items:
                type: object
                properties:
                  comment_id:
                    type: string
                  value:
                    type: integer
                    format: int32
      active:
        type: boolean
externalDocs:
  description: Built by United Effects
  url: 'https://github.com/unitedeffects'
